# HTTP блок - только редирект на HTTPS (без изменений)
server {
    listen 79.133.183.86:80;
    listen 80;
    server_name vdestor.ru www.vdestor.ru;
    return 301 https://$server_name$request_uri;
}

# HTTPS основной блок 
server {
    listen 79.133.183.86:443 ssl http2;
    listen 443 ssl http2;
    server_name vdestor.ru www.vdestor.ru;
    
    root /var/www/www-root/data/site/vdestor.ru/public;
    index index.php index.html;

    # SSL настройки (без изменений)
    ssl_certificate /var/www/httpd-cert/www-root/vdestor.ru_le2.crtca;
    ssl_certificate_key /var/www/httpd-cert/www-root/vdestor.ru_le2.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam4096.pem;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;

    # Заголовки безопасности (без изменений)
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Логи (без изменений)
    access_log /var/www/httpd-logs/vdestor.ru.access.log;
    error_log /var/www/httpd-logs/vdestor.ru.error.log notice;

    # Gzip (без изменений)
    gzip on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Редирект www на без www (без изменений)
    if ($host = 'www.vdestor.ru') {
        return 301 https://vdestor.ru$request_uri;
    }

    # Защита системных файлов (без изменений)
    location ~ /\.(env|git|svn|ht|DS_Store) {
        deny all;
        return 404;
    }

    # Защита конфигов (без изменений)
    location ~ ^/(config|src|vendor)/ {
        deny all;
        return 404;
    }

    # ⚠️ КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ #1: API маршруты ТЕПЕРЬ ПЕРВЫЕ!
    # Это главная причина проблемы - порядок location блоков имеет значение!
    location ^~ /api/ {
        try_files $uri /index.php?$query_string;
        
        # Добавляем CORS для API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        
        # Обработка OPTIONS запросов
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # Статика с оптимизацией (без изменений)
    location ~ \.(jpg|jpeg|gif|png|svg|js|css|ico|woff|woff2|ttf|eot|mp4|webm|webp)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        try_files $uri =404;
    }

    # ⚠️ КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ #2: Админка ТЕПЕРЬ ПОСЛЕ API!
    # Раньше этот блок перехватывал запросы к /api/admin/* раньше блока /api/
    location ^~ /admin {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Основной маршрутинг (без изменений)
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # ⚠️ УЛУЧШЕНИЕ #3: Объединили PHP обработчики и увеличили таймауты
    # Теперь все PHP файлы обрабатываются одинаково с нужными таймаутами
    location ~ \.php$ {
        # Защита от выполнения PHP в загрузках
        if ($uri ~ /uploads/) {
            return 404;
        }

        # Проверка существования файла
        try_files $uri =404;

        fastcgi_pass unix:/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Дополнительные параметры
        fastcgi_param PHP_ADMIN_VALUE "sendmail_path = /usr/sbin/sendmail -t -i -f vde76ru@yandex.ru";
        fastcgi_param HTTPS on;
        fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        
        # ⚠️ ИСПРАВЛЕНИЕ #4: Увеличенные буферы и таймауты для ВСЕХ PHP файлов
        # Это решит проблемы с тяжелыми операциями как в админке, так и в API
        fastcgi_buffer_size 256k;
        fastcgi_buffers 256 32k;
        fastcgi_busy_buffers_size 512k;
        fastcgi_temp_file_write_size 512k;
        
        # Большие таймауты для диагностики и других тяжелых операций
        fastcgi_read_timeout 3600;  # 1 час вместо 60 секунд
        fastcgi_send_timeout 3600;  # 1 час вместо 60 секунд  
        fastcgi_connect_timeout 300; # 5 минут вместо 60 секунд
    }
    
    # Запрет доступа к .php файлам в определенных директориях (без изменений)
    location ~ /(uploads|assets|images)/.*\.php$ {
        deny all;
        return 404;
    }
}